"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.getHDmasterKeyFromMnemonic=exports.getETHAddress=exports.createMnemonic=exports.createHDmasterKey=void 0;var _crypto=require("crypto");var _wallet=_interopRequireDefault(require("wallet.ts"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const createHDmasterKey=key=>{const masterKey=_wallet.default.HDKey.parseMasterSeed(key);const extendedPrivateKey=masterKey.derive("m/44'/60'/0'/0").extendedPrivateKey;const childKey=_wallet.default.HDKey.parseExtendedKey(extendedPrivateKey);const wallet=childKey.derive("0");const walletPrivateKey=wallet.privateKey;const walletPublicKey=wallet.publicKey;return{publicKey:walletPublicKey,privateKey:walletPrivateKey}};exports.createHDmasterKey=createHDmasterKey;const createMnemonic=()=>{const mnemonic=_wallet.default.Mnemonic.generate((0,_crypto.randomBytes)(32));const phrase=mnemonic.phrase;const seed=mnemonic.toSeed();return{phrase,seed}};exports.createMnemonic=createMnemonic;const getETHAddress=key=>{const address=_wallet.default.EthereumAddress.from(key).address;return address};exports.getETHAddress=getETHAddress;const getHDmasterKeyFromMnemonic=phrase=>{const mnemonic=_wallet.default.Mnemonic.parse(phrase);if(!mnemonic){throw new Error("Mnemonic phrase is not correct.")}const seed=mnemonic.toSeed();return createHDmasterKey(seed)};exports.getHDmasterKeyFromMnemonic=getHDmasterKeyFromMnemonic;
//# sourceMappingURL=helpers.js.map